// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                &kp W          &kp E       &kp R           &kp T           &kp Y           &kp U           &kp I      &kp O        &kp P
&hml LEFT_CONTROL A  &hml LCMD S    &lt 2 D     &hml LSHIFT F   &hml LALT G     &hmr RALT H     &hmr RSHIFT J   &kp K      &hmr RCMD L  &hmr RCTRL SEMI
&kp Z                &kp X          &kp C       &kp V           &kp B           &kp N           &kp M           &kp COMMA  &kp PERIOD   &kp SLASH
                                                &lt 1 SPACE     &kp TAB         &kp ENTER       &kp BACKSPACE
            >;
        };

        symbols {
            bindings = <
&trans        &kp ESCAPE  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE     &trans     &kp N7        &kp N8        &kp N9        &kp ASTERISK
&trans        &kp TILDE   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT      &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&kp CAPSLOCK  &kp HASH    &kp LEFT_BRACKET      &kp RBKT               &kp GRAVE    &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL
                                                &trans                 &trans       &trans     &kp N0
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans        &trans        &bt BT_CLR    &trans  &trans          &kp UP_ARROW    &trans           &trans
&trans  &trans  &bt BT_SEL 1  &bt BT_SEL 0  &trans        &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans        &trans        &trans        &trans  &trans          &trans          &trans           &trans
                              &trans        &trans        &trans  &trans
            >;
        };
    };
};
